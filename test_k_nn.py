import sys
import os

import pickle

from collections import Counter




malware_train_dir = 'parsed_malware'


# load precalculated distances matrix
with open('distances.pickle', 'rb') as handle:
    distances = pickle.load(handle)

# define closest neighbors dictionary
closest_distances = dict()
closest_classes = dict()

print('finding nearest neighbors...')
for root, dirs, filenames in os.walk(malware_train_dir):
        for test_malware in filenames:
                out_file = open('results/' + test_malware, 'a')                
                sorted_distances = sorted((distances[test_malware]).values())

                
                for k in {1, 2, 5, 8, 9, 10, 20}:
                        closest_distances[k] = []
                        closest_classes[k] = []
                        for i in range(0, k):
                                for malware, distance in distances[test_malware].items():
                                        if distance == sorted_distances[i]:
                                                closest_malwares[k].append(malware)
                                                closest_classes[k].append(malware[malware.index('_') + 6 : malware.index('_') + 7])
                        counter = Counter(closest_classes[k])
                        closest_class = counter.most_common()[0][0]
                        #print('\n' + str(k) + ' closest malwares to ' + test_malware + ' :\n')
                        #print(counter.most_common())
                        #print(str(k) + '_NN classification  =  ' + closest_class)
                        #print('\n')
                        out_file.write(str(k) + '_NN classification  =  ' + closest_class + '\n')
                        

